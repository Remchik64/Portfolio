import streamlit as st
import json
import os

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
st.set_page_config(
    page_title="–ü–æ—Ä—Ç—Ñ–æ–ª–∏–æ",
    page_icon="üë®‚Äçüíª",
    layout="wide"
)

# –°—Ç–∏–ª–∏
st.markdown("""
    <style>
        /* –°–∫—Ä—ã–≤–∞–µ–º –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è */
        .stDeployButton {display:none;}
        .viewerBadge_container__1QSob {display:none;}
        div[data-testid="stDecoration"] {display:none;}
        div[data-baseweb="notification"] {display:none;}
        div[class="stAlert"] {display:none;}
        
        /* –ú—è–≥–∫–∏–µ –Ω–µ–æ–Ω–æ–≤—ã–µ —Ä–∞–º–∫–∏ –¥–ª—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π */
        .element-container img {
            border-radius: 5px;
            box-shadow: 0 0 5px #4d94ff,
                       0 0 10px #4d94ff;
            margin: 10px 0;
            transition: all 0.3s ease;
        }
        
        .element-container img:hover {
            box-shadow: 0 0 8px #4d94ff,
                       0 0 15px #4d94ff;
        }
    </style>
""", unsafe_allow_html=True)

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö
def load_portfolio_data():
    if os.path.exists("data/portfolio_data.json"):
        with open("data/portfolio_data.json", "r", encoding='utf-8') as f:
            return json.load(f)
    return {
        "about": "–ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ –Ω–∞–ø–∏—Å–∞—Ç—å –∫—Ä–∞—Ç–∫—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–µ–±–µ, –≤–∞—à–µ–º –æ–ø—ã—Ç–µ –∏ –Ω–∞–≤—ã–∫–∞—Ö.",
        "projects": {
            "–ü—Ä–æ–µ–∫—Ç 1": {
                "description": "–í–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º React –∏ FastAPI",
                "image": "static/images/project1.jpg",
                "url": "Project_1",
                "details": {
                    "about": "–û–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞",
                    "features": [
                        "–û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç—å 1: –û–ø–∏—Å–∞–Ω–∏–µ",
                        "–û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç—å 2: –û–ø–∏—Å–∞–Ω–∏–µ",
                        "–û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç—å 3: –û–ø–∏—Å–∞–Ω–∏–µ"
                    ],
                    "tech_stack": {
                        "frontend": ["React", "TypeScript", "Material-UI"],
                        "backend": ["Python", "FastAPI", "PostgreSQL"],
                        "devops": ["Docker", "AWS", "CI/CD"]
                    }
                }
            },
            "–ü—Ä–æ–µ–∫—Ç 2": {
                "description": "–ú–æ–±–∏–ª—å–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –Ω–∞ Vue.js –∏ Node.js",
                "image": "static/images/project2.jpg",
                "url": "Project_2",
                "details": {
                    "about": "–û–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞",
                    "features": [
                        "–û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç—å 1: –û–ø–∏—Å–∞–Ω–∏–µ",
                        "–û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç—å 2: –û–ø–∏—Å–∞–Ω–∏–µ",
                        "–û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç—å 3: –û–ø–∏—Å–∞–Ω–∏–µ"
                    ],
                    "tech_stack": {
                        "frontend": ["Vue.js", "Vuex", "Tailwind CSS"],
                        "backend": ["Node.js", "Express", "MongoDB"],
                        "devops": ["Git", "Jest", "Webpack"]
                    }
                }
            },
            "–ü—Ä–æ–µ–∫—Ç 3": {
                "description": "ML-–ø—Ä–æ–µ–∫—Ç —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º TensorFlow",
                "image": "static/images/project3.jpg",
                "url": "Project_3",
                "details": {
                    "about": "–û–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞",
                    "features": [
                        "–û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç—å 1: –û–ø–∏—Å–∞–Ω–∏–µ",
                        "–û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç—å 2: –û–ø–∏—Å–∞–Ω–∏–µ",
                        "–û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç—å 3: –û–ø–∏—Å–∞–Ω–∏–µ"
                    ],
                    "tech_stack": {
                        "frontend": ["TensorFlow.js", "React", "D3.js"],
                        "backend": ["Python", "TensorFlow", "Flask"],
                        "devops": ["Docker", "Kubernetes", "MLflow"]
                    }
                }
            }
        },
        "contacts": {
            "email": "example@example.com",
            "linkedin": "your-linkedin",
            "github": "your-github"
        }
    }

# –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö
portfolio_data = load_portfolio_data()

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
def safe_load_image(image_path, default_content=None):
    try:
        if os.path.exists(image_path):
            return open(image_path, 'rb').read()
        return default_content
    except:
        return default_content

# –î–æ–±–∞–≤–ª–µ–Ω–∏–µ CSS –¥–ª—è —Å—Ç–∏–ª–∏–∑–∞—Ü–∏–∏
st.markdown("""
    <style>
        .main {
            background-color: #1a1a1a;
            color: #ffffff;
        }
        .stTitle {
            color: #00ff9d !important;
            font-size: 3rem !important;
            padding-bottom: 2rem;
            text-shadow: 2px 2px 4px rgba(0,0,0,0.5);
        }
        .stHeader {
            color: #00ff9d !important;
            padding-top: 2rem;
            text-shadow: 1px 1px 2px rgba(0,0,0,0.3);
        }
        div[data-testid="stHorizontalBlock"] {
            background-color: #2d2d2d;
            padding: 2rem;
            border-radius: 15px;
            box-shadow: 0 4px 15px rgba(0, 0, 0, 0.2);
            margin: 1rem 0;
            border: 1px solid #3d3d3d;
        }
        p {
            color: #ffffff !important;
            font-size: 1.1rem !important;
            line-height: 1.6 !important;
        }
        .contact-info {
            background-color: #3d3d3d;
            padding: 1rem;
            border-radius: 10px;
            margin: 0.5rem 0;
            transition: all 0.3s ease;
        }
        .contact-info:hover {
            background-color: #4d4d4d;
            transform: translateY(-5px);
        }
        /* –°—Ç–∏–ª–∏ –¥–ª—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è */
        [data-testid="stImage"] > img {
            border-radius: 15px;
            border: 3px solid #00ff9d;
            box-shadow: 0 0 20px rgba(0, 255, 157, 0.3);
            max-width: 100%;
            height: auto;
            display: block;
            margin: 0 auto;
        }
        /* –°—Ç–∏–ª–∏ –¥–ª—è –±–æ–∫–æ–≤–æ–≥–æ –º–µ–Ω—é */
        [data-testid="stSidebar"] {
            background-color: #2d2d2d;
            border-right: 1px solid #3d3d3d;
            padding: 1rem;
        }
        [data-testid="stSidebar"] .stTitle {
            font-size: 1.5rem !important;
            padding-bottom: 1rem;
        }
        /* –°—Ç–∏–ª–∏ –¥–ª—è —Å—Å—ã–ª–æ–∫ –≤ –±–æ–∫–æ–≤–æ–º –º–µ–Ω—é */
        .css-1oe5cao {
            color: #00ff9d !important;
        }
        .css-1oe5cao:hover {
            color: #00ccff !important;
        }
        .contact-link {
            color: #00ccff !important;
            text-decoration: none;
            transition: all 0.3s ease;
            display: inline-flex;
            align-items: center;
            margin: 0.5rem 0;
        }
        .contact-link:hover {
            color: #00ff9d !important;
            transform: translateX(5px);
        }
        .contact-icon {
            margin-right: 10px;
            font-size: 1.2em;
        }
    </style>
""", unsafe_allow_html=True)

# –ó–∞–≥–æ–ª–æ–≤–æ–∫ –ø–æ—Ä—Ç—Ñ–æ–ª–∏–æ
st.title("–ü–æ—Ä—Ç—Ñ–æ–ª–∏–æ –†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞ / –ü—Ä–æ–¥–∞–∫—Ç –ú–µ–Ω–µ–¥–∂–µ—Ä–∞")

# –°–æ–∑–¥–∞–µ–º –¥–≤–µ –∫–æ–ª–æ–Ω–∫–∏ –≤ —Ä–∞–∑–¥–µ–ª–µ "–û —Å–µ–±–µ"
col1, col2 = st.columns([1, 2])

with col1:
    # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ —Å –æ–±—Ä–∞–±–æ—Ç–∫–æ–π –æ—à–∏–±–æ–∫
    profile_image = safe_load_image("static/images/profile.jpg")
    if profile_image:
        st.image(profile_image, use_column_width=True)
    else:
        st.info("–ó–∞–≥—Ä—É–∑–∏—Ç–µ —Ñ–æ—Ç–æ –ø—Ä–æ—Ñ–∏–ª—è –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏")

with col2:
    # –†–∞–∑–¥–µ–ª –æ —Å–µ–±–µ
    st.header("–û —Å–µ–±–µ")
    st.write(portfolio_data["about"])

# –†–∞–∑–¥–µ–ª –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤
st.header("–ö–æ–Ω—Ç–∞–∫—Ç—ã")
contacts = portfolio_data.get("contacts", {})

# Email
if contacts.get("email"):
    st.markdown(
        f'<a href="mailto:{contacts["email"]}" class="contact-link">'
        f'<span class="contact-icon">üìß</span> {contacts["email"]}</a>',
        unsafe_allow_html=True
    )

# GitHub
if contacts.get("github"):
    st.markdown(
        f'<a href="{contacts["github"]}" target="_blank" class="contact-link">'
        f'<span class="contact-icon">üíª</span> GitHub</a>',
        unsafe_allow_html=True
    )

# LinkedIn
if contacts.get("linkedin"):
    st.markdown(
        f'<a href="{contacts["linkedin"]}" target="_blank" class="contact-link">'
        f'<span class="contact-icon">üëî</span> LinkedIn</a>',
        unsafe_allow_html=True
    )

# –†–µ–∑—é–º–µ
if contacts.get("project"):
    st.markdown(
        f'<a href="{contacts["project"]}" target="_blank" class="contact-link">'
        f'<span class="contact-icon">üîó</span> –ü—Ä–æ–µ–∫—Ç</a>',
        unsafe_allow_html=True
    )

# –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫ –≤ –±–æ–∫–æ–≤–æ–µ –º–µ–Ω—é
st.sidebar.title("–ù–∞–≤–∏–≥–∞—Ü–∏—è")

# –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞ –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å –≤ –∫–æ–Ω–µ—Ü –±–æ–∫–æ–≤–æ–≥–æ –º–µ–Ω—é
st.sidebar.markdown("---")  # –†–∞–∑–¥–µ–ª–∏—Ç–µ–ª—å
st.sidebar.title("–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ")
if st.sidebar.button("–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –ø–æ—Ä—Ç—Ñ–æ–ª–∏–æ ‚öôÔ∏è"):
    st.switch_page("pages/Admin.py")
