import streamlit as st

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
st.set_page_config(
    page_title="–ú–æ—ë –ü–æ—Ä—Ç—Ñ–æ–ª–∏–æ",
    page_icon="üöÄ",
    layout="wide"
)

# –î–æ–±–∞–≤–ª–µ–Ω–∏–µ CSS –¥–ª—è —Å—Ç–∏–ª–∏–∑–∞—Ü–∏–∏
st.markdown("""
    <style>
        /* –û—Å–Ω–æ–≤–Ω–æ–π —Ñ–æ–Ω —Å—Ç—Ä–∞–Ω–∏—Ü—ã */
        .main {
            background-color: #1a1a1a;
            color: #ffffff;
        }
        
        /* –°—Ç–∏–ª–∏ –¥–ª—è –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤ */
        .stTitle {
            color: #00ff9d !important;
            font-size: 3rem !important;
            padding-bottom: 2rem;
            text-shadow: 2px 2px 4px rgba(0,0,0,0.5);
        }
        
        .stHeader {
            color: #00ff9d !important;
            padding-top: 2rem;
            text-shadow: 1px 1px 2px rgba(0,0,0,0.3);
        }
        
        .stSubheader {
            color: #00ccff !important;
            margin-bottom: 1rem;
        }
        
        /* –°—Ç–∏–ª–∏ –¥–ª—è –±–ª–æ–∫–æ–≤ */
        div[data-testid="stHorizontalBlock"] {
            background-color: #2d2d2d;
            padding: 2rem;
            border-radius: 15px;
            box-shadow: 0 4px 15px rgba(0, 0, 0, 0.2);
            margin: 1rem 0;
            border: 1px solid #3d3d3d;
        }
        
        /* –°—Ç–∏–ª–∏ –¥–ª—è —Ç–µ–∫—Å—Ç–∞ */
        p {
            color: #ffffff !important;
            font-size: 1.1rem !important;
            line-height: 1.6 !important;
        }
        
        /* –°—Ç–∏–ª–∏ –¥–ª—è —Å–ø–∏—Å–∫–æ–≤ */
        ul {
            list-style-type: none;
            padding-left: 0;
        }
        
        li {
            color: #ffffff !important;
            margin-bottom: 0.5rem;
            padding: 0.5rem;
            background-color: #3d3d3d;
            border-radius: 5px;
            transition: all 0.3s ease;
        }
        
        li:hover {
            background-color: #4d4d4d;
            transform: translateX(10px);
        }
        
        /* –°—Ç–∏–ª–∏ –¥–ª—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π */
        img {
            border-radius: 10px;
            box-shadow: 0 4px 15px rgba(0, 0, 0, 0.3);
            transition: transform 0.3s ease;
        }
        
        img:hover {
            transform: scale(1.02);
        }
        
        /* –°—Ç–∏–ª–∏ –¥–ª—è –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤ */
        .contact-info {
            background-color: #3d3d3d;
            padding: 1rem;
            border-radius: 10px;
            margin: 0.5rem 0;
            transition: all 0.3s ease;
        }
        
        .contact-info:hover {
            background-color: #4d4d4d;
            transform: translateY(-5px);
        }
    </style>
""", unsafe_allow_html=True)

# –ó–∞–≥–æ–ª–æ–≤–æ–∫ –ø–æ—Ä—Ç—Ñ–æ–ª–∏–æ
st.title("–ü–æ—Ä—Ç—Ñ–æ–ª–∏–æ –†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞ / –ü—Ä–æ–¥–∞–∫—Ç –ú–µ–Ω–µ–¥–∂–µ—Ä–∞")

# –°–æ–∑–¥–∞–µ–º –¥–≤–µ –∫–æ–ª–æ–Ω–∫–∏ –≤ —Ä–∞–∑–¥–µ–ª–µ "–û —Å–µ–±–µ"
col1, col2 = st.columns([1, 2])

with col1:
    # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏
    st.image("static/images/profile.jpg", caption="–í–∞—à–µ –∏–º—è", use_column_width=True)

with col2:
    # –†–∞–∑–¥–µ–ª –æ —Å–µ–±–µ
    st.header("–û —Å–µ–±–µ")
    st.write("""
    –ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ –Ω–∞–ø–∏—Å–∞—Ç—å –∫—Ä–∞—Ç–∫—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–µ–±–µ, –≤–∞—à–µ–º –æ–ø—ã—Ç–µ –∏ –Ω–∞–≤—ã–∫–∞—Ö.
    –†–∞—Å—Å–∫–∞–∂–∏—Ç–µ —Å–≤–æ—é –∏—Å—Ç–æ—Ä–∏—é, —á—Ç–æ –≤–∞—Å –º–æ—Ç–∏–≤–∏—Ä—É–µ—Ç –∏ –∫–∞–∫–∏–µ —É –≤–∞—Å —Ü–µ–ª–∏.
    """)

# –†–∞–∑–¥–µ–ª –ø—Ä–æ–µ–∫—Ç–æ–≤
st.header("–ü—Ä–æ–µ–∫—Ç—ã")
# –°–æ–∑–¥–∞–µ–º —Å–µ—Ç–∫—É –¥–ª—è –ø—Ä–æ–µ–∫—Ç–æ–≤
proj_col1, proj_col2, proj_col3 = st.columns(3)

projects = {
    "–ü—Ä–æ–µ–∫—Ç 1": {
        "description": "–í–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º React –∏ FastAPI",
        "image": "static/images/project1.jpg",
        "url": "Project_1"
    },
    "–ü—Ä–æ–µ–∫—Ç 2": {
        "description": "–ú–æ–±–∏–ª—å–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –Ω–∞ Vue.js –∏ Node.js",
        "image": "static/images/project2.jpg",
        "url": "Project_2"
    },
    "–ü—Ä–æ–µ–∫—Ç 3": {
        "description": "ML-–ø—Ä–æ–µ–∫—Ç —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º TensorFlow –∏ Kubernetes",
        "image": "static/images/project3.jpg",
        "url": "Project_3"
    }
}

for (proj_col, (project, details)) in zip([proj_col1, proj_col2, proj_col3], projects.items()):
    with proj_col:
        st.subheader(project)
        st.image(details["image"], use_column_width=True)
        st.write(details["description"])
        if st.button("–ü–æ–¥—Ä–æ–±–Ω–µ–µ üîç", key=f"btn_{details['url']}"):
            st.switch_page(f"pages/{details['url']}.py")

# –†–∞–∑–¥–µ–ª –Ω–∞–≤—ã–∫–æ–≤
st.header("–ù–∞–≤—ã–∫–∏")
skill_col1, skill_col2 = st.columns(2)

with skill_col1:
    st.subheader("–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –Ω–∞–≤—ã–∫–∏")
    tech_skills = ["Python", "JavaScript", "React", "SQL"]
    for skill in tech_skills:
        st.write(f"‚Ä¢ {skill}")

with skill_col2:
    st.subheader("Soft skills")
    soft_skills = ["–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞–º–∏", "–ê–Ω–∞–ª–∏–∑ –¥–∞–Ω–Ω—ã—Ö", "–ö–æ–º–º—É–Ω–∏–∫–∞—Ü–∏—è", "–õ–∏–¥–µ—Ä—Å—Ç–≤–æ"]
    for skill in soft_skills:
        st.write(f"‚Ä¢ {skill}")

# –†–∞–∑–¥–µ–ª –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤
st.header("–ö–æ–Ω—Ç–∞–∫—Ç—ã")
contact_col1, contact_col2, contact_col3 = st.columns(3)

with contact_col1:
    st.markdown('<div class="contact-info">üìß Email: example@example.com</div>', unsafe_allow_html=True)
with contact_col2:
    st.markdown('<div class="contact-info">üíº LinkedIn: your-linkedin</div>', unsafe_allow_html=True)
with contact_col3:
    st.markdown('<div class="contact-info">üåê GitHub: your-github</div>', unsafe_allow_html=True)
