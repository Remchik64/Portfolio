import streamlit as st
import json
import os

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
st.set_page_config(
    page_title="–ü—Ä–æ–µ–∫—Ç 2",
    page_icon="üöÄ",
    layout="wide"
)

# –°—Ç–∏–ª–∏
st.markdown("""
    <style>
        /* –°–∫—Ä—ã–≤–∞–µ–º –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è */
        .stDeployButton {display:none;}
        .viewerBadge_container__1QSob {display:none;}
        div[data-testid="stDecoration"] {display:none;}
        div[data-baseweb="notification"] {display:none;}
        div[class="stAlert"] {display:none;}
        
        /* –ú—è–≥–∫–∏–µ –Ω–µ–æ–Ω–æ–≤—ã–µ —Ä–∞–º–∫–∏ –¥–ª—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π */
        .element-container img {
            border-radius: 5px;
            box-shadow: 0 0 5px #4d94ff,
                       0 0 10px #4d94ff;
            margin: 10px 0;
            transition: all 0.3s ease;
        }
        
        .element-container img:hover {
            box-shadow: 0 0 8px #4d94ff,
                       0 0 15px #4d94ff;
        }
    </style>
""", unsafe_allow_html=True)

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
def safe_load_image(image_path, default_content=None):
    try:
        if os.path.exists(image_path):
            return open(image_path, 'rb').read()
        return default_content
    except:
        return default_content

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö
def load_portfolio_data():
    if os.path.exists("data/portfolio_data.json"):
        with open("data/portfolio_data.json", "r", encoding='utf-8') as f:
            return json.load(f)
    return {}

# –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ
portfolio_data = load_portfolio_data()

# –ó–Ω–∞—á–µ–Ω–∏—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –¥–ª—è –ø—Ä–æ–µ–∫—Ç–∞
default_project = {
    "description": "–ú–æ–±–∏–ª—å–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –Ω–∞ Vue.js –∏ Node.js",
    "image": "static/images/project2.jpg",
    "url": "Project_2",
    "details": {
        "about": "–û–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞",
        "features": [
            "–û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç—å 1: –û–ø–∏—Å–∞–Ω–∏–µ",
            "–û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç—å 2: –û–ø–∏—Å–∞–Ω–∏–µ",
            "–û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç—å 3: –û–ø–∏—Å–∞–Ω–∏–µ"
        ],
        "tech_stack": {
            "frontend": ["Vue.js", "Vuex", "Tailwind CSS"],
            "backend": ["Node.js", "Express", "MongoDB"],
            "devops": ["Git", "Jest", "Webpack"]
        }
    }
}

# –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø—Ä–æ–µ–∫—Ç–∞ —Å –æ–±—Ä–∞–±–æ—Ç–∫–æ–π –æ—à–∏–±–æ–∫
try:
    project_data = portfolio_data.get("projects", {}).get("–ü—Ä–æ–µ–∫—Ç 2", default_project)
except Exception as e:
    st.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –¥–∞–Ω–Ω—ã—Ö –ø—Ä–æ–µ–∫—Ç–∞: {str(e)}")
    project_data = default_project

# –î–æ–±–∞–≤–ª–µ–Ω–∏–µ CSS
st.markdown("""
    <style>
        .main {
            background-color: #1a1a1a;
            color: #ffffff;
        }
        .stTitle {
            color: #00ff9d !important;
            text-shadow: 2px 2px 4px rgba(0,0,0,0.5);
        }
        .stHeader {
            color: #00ccff !important;
        }
        p {
            color: #ffffff !important;
        }
        .tech-stack {
            background-color: #2d2d2d;
            padding: 1rem;
            border-radius: 10px;
            margin: 0.5rem 0;
            border: 1px solid #3d3d3d;
        }
        .feature {
            background-color: #2d2d2d;
            padding: 1.5rem;
            border-radius: 10px;
            margin: 1rem 0;
            border: 1px solid #3d3d3d;
            transition: transform 0.3s ease;
            word-wrap: break-word;
            white-space: pre-wrap;
            overflow-wrap: break-word;
            max-width: 100%;
        }
        .feature:hover {
            transform: translateY(-5px);
        }
        /* –°—Ç–∏–ª–∏ –¥–ª—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –ø—Ä–æ–µ–∫—Ç–∞ */
        [data-testid="stImage"] > img {
            border-radius: 15px;
            border: 2px solid #00ccff;
            box-shadow: 0 0 20px rgba(0, 204, 255, 0.3);
            max-width: 100%;
            height: auto;
        }
        .project-links {
            display: flex;
            gap: 1rem;
            margin: 1rem 0;
        }
        .project-link {
            display: inline-block;
            padding: 0.5rem 1rem;
            background-color: #2d2d2d;
            color: #00ccff !important;
            text-decoration: none;
            border-radius: 5px;
            border: 1px solid #3d3d3d;
            transition: all 0.3s ease;
        }
        .project-link:hover {
            background-color: #3d3d3d;
            transform: translateY(-2px);
            box-shadow: 0 2px 5px rgba(0,0,0,0.2);
        }
        .github-link {
            background-color: #24292e;
        }
        .website-link {
            background-color: #2d2d2d;
        }
        .carousel-container {
            position: relative;
            width: 100%;
            margin: 2rem 0;
        }
        .carousel-nav {
            position: absolute;
            top: 50%;
            transform: translateY(-50%);
            background: rgba(0, 0, 0, 0.7);
            color: white;
            padding: 1rem;
            border: none;
            border-radius: 50%;
            cursor: pointer;
            transition: all 0.3s ease;
            width: 50px;
            height: 50px;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 24px;
        }
        .carousel-nav:hover {
            background: rgba(0, 0, 0, 0.9);
        }
        .carousel-prev {
            left: 1rem;
        }
        .carousel-next {
            right: 1rem;
        }
        .carousel-indicator {
            text-align: center;
            margin-top: 1rem;
            color: white;
        }
    </style>
""", unsafe_allow_html=True)

# –ó–∞–≥–æ–ª–æ–≤–æ–∫ –ø—Ä–æ–µ–∫—Ç–∞
st.title(f"–ü—Ä–æ–µ–∫—Ç 2: {project_data['description']}")

# –ö–∞—Ä—É—Å–µ–ª—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
st.markdown('<div class="carousel-container">', unsafe_allow_html=True)

# –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
images = project_data.get("images", [project_data["image"]])

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏ –∫–æ—Ä—Ä–µ–∫—Ç–∏—Ä—É–µ–º –∏–Ω–¥–µ–∫—Å, –µ—Å–ª–∏ –æ–Ω –≤—ã—Ö–æ–¥–∏—Ç –∑–∞ –ø—Ä–µ–¥–µ–ª—ã
if 'current_image_index' not in st.session_state or st.session_state.current_image_index >= len(images):
    st.session_state.current_image_index = 0

# –ö–Ω–æ–ø–∫–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
col1, col2, col3 = st.columns([1, 10, 1])

with col1:
    if st.button("‚óÄ", key="prev") and len(images) > 1:
        st.session_state.current_image_index = (st.session_state.current_image_index - 1) % len(images)

with col2:
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–µ–∫—É—â–µ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
    current_image = images[st.session_state.current_image_index]
    image_content = safe_load_image(current_image)
    if image_content:
        st.image(image_content, use_container_width=True)
    else:
        st.info("–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ")
    
    # –ò–Ω–¥–∏–∫–∞—Ç–æ—Ä –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
    if len(images) > 1:
        st.markdown(
            f'<div class="carousel-indicator">{st.session_state.current_image_index + 1} / {len(images)}</div>',
            unsafe_allow_html=True
        )

with col3:
    if st.button("‚ñ∂", key="next") and len(images) > 1:
        st.session_state.current_image_index = (st.session_state.current_image_index + 1) % len(images)

st.markdown('</div>', unsafe_allow_html=True)

# –î–æ–±–∞–≤–ª—è–µ–º —Å—Å—ã–ª–∫–∏ –Ω–∞ –ø—Ä–æ–µ–∫—Ç
if "links" in project_data:
    st.markdown('<div class="project-links">', unsafe_allow_html=True)
    
    if project_data["links"].get("github"):
        st.markdown(
            f'<a href="{project_data["links"]["github"]}" target="_blank" class="project-link github-link">üîó GitHub</a>',
            unsafe_allow_html=True
        )
    
    if project_data["links"].get("website"):
        st.markdown(
            f'<a href="{project_data["links"]["website"]}" target="_blank" class="project-link website-link">üåê –í–µ–±-—Å–∞–π—Ç</a>',
            unsafe_allow_html=True
        )
    
    st.markdown('</div>', unsafe_allow_html=True)

# –û–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞
st.header("–û –ø—Ä–æ–µ–∫—Ç–µ")
st.write(project_data["details"]["about"])

# –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–π —Å—Ç–µ–∫
st.header("–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–π —Å—Ç–µ–∫")
col1, col2, col3 = st.columns(3)

with col1:
    st.markdown(f'<div class="tech-stack">üîß Frontend:<br>‚Ä¢ ' + '<br>‚Ä¢ '.join(project_data["details"]["tech_stack"]["frontend"]) + '</div>', unsafe_allow_html=True)
with col2:
    st.markdown(f'<div class="tech-stack">‚öôÔ∏è Backend:<br>‚Ä¢ ' + '<br>‚Ä¢ '.join(project_data["details"]["tech_stack"]["backend"]) + '</div>', unsafe_allow_html=True)
with col3:
    st.markdown(f'<div class="tech-stack">üõ†Ô∏è DevOps:<br>‚Ä¢ ' + '<br>‚Ä¢ '.join(project_data["details"]["tech_stack"]["devops"]) + '</div>', unsafe_allow_html=True)

# –ö–ª—é—á–µ–≤—ã–µ –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏
st.header("–ö–ª—é—á–µ–≤—ã–µ –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏")
for feature in project_data["details"]["features"]:
    st.markdown(f'<div class="feature">{feature}</div>', unsafe_allow_html=True)

# –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –≤–æ–∑–≤—Ä–∞—Ç–∞ –Ω–∞ –≥–ª–∞–≤–Ω—É—é
if st.button("‚Üê –í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞ –≥–ª–∞–≤–Ω—É—é"):
    st.switch_page("portfolio.py") 